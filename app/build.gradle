plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-kapt'
    id 'kotlin-android-extensions'
    id 'androidx.navigation.safeargs'
    id 'com.google.gms.google-services'
    id 'com.google.firebase.crashlytics'
    id 'com.google.firebase.firebase-perf'
}

def propertiesFile = rootProject.file("app.properties")
def properties = new Properties()
properties.load(new FileInputStream(propertiesFile))

android {
    compileSdk 33

    defaultConfig {
        applicationId "com.intuisoft.plaid"
        minSdk 26
        targetSdk 33
        versionCode 13
        versionName "0.1.4"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled true
            shrinkResources true
            firebaseCrashlytics {
                mappingFileUploadEnabled true
            }
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }

        // Proguard testing form dev (Uncomment when needing to test a newly imported lib)
//        debug {
//            minifyEnabled true
//            firebaseCrashlytics {
//                mappingFileUploadEnabled true
//            }
//            proguardFile 'proguard-rules.pro'
//            zipAlignEnabled true
//        }
    }

    signingConfigs {
        develop {
            storeFile file("${project.rootDir}/keystore/app.keystore")
            storePassword properties['KEY_PASSWORD']
            keyAlias properties['KEY_ALIAS']
            keyPassword properties['STORE_PASSWORD']
        }

        production {
            storeFile file("${project.rootDir}/keystore/app.keystore")
            storePassword properties['KEY_PASSWORD']
            keyAlias properties['KEY_ALIAS']
            keyPassword properties['STORE_PASSWORD']
        }
    }

    flavorDimensions "version"
    productFlavors {
        dev {
            versionNameSuffix = "-dev"
            applicationIdSuffix ".dev"
            resValue "string", "app_name", "Omoir (Dev)"
            signingConfig signingConfigs.develop
            buildConfigField("String", "BLOCKCHAIR_SERVER_URL", "\"https://api.blockchair.com/bitcoin/\"")
            buildConfigField("String", "BLOCKCHAIR_TESTNET_SERVER_URL", "\"https://api.blockchair.com/bitcoin/testnet/\"")
            buildConfigField("String", "BLOCKCHAIN_INFO_SERVER_URL", "\"https://api.blockchain.info/\"")
            buildConfigField("String", "COIN_GECKO_SERVER_URL", "\"https://api.coingecko.com/api/v3/\"")
            buildConfigField("String", "CHANGE_NOW_SERVER_URL", "\"https://api.changenow.io/v2/\"")
            buildConfigField("String", "BLOCKSTREAM_INFO_SERVER_URL", "\"https://blockstream.info/api/\"")
            buildConfigField("String", "BLOCKSTREAM_INFO_TEST_NET_SERVER_URL", "\"https://blockstream.info/testnet/api/\"")
            buildConfigField("String", "BLOCKCHAIR_CLIENT_SECRET", "null")
            buildConfigField("String", "COINGECKO_CLIENT_SECRET", "null")
            buildConfigField("String", "CHANGE_NOW_CLIENT_SECRET", "\"${properties['CHANGE_NOW_CLIENT_SECRET']}\"")
            buildConfigField("String", "REVENUE_CAT_SECRET", "\"${properties['REVENUE_CAT_SECRET']}\"")
            buildConfigField("Boolean", "PREMIUM_OVERRIDE", "true")
            buildConfigField("Boolean", "LOGGING_ENABLED", "true")
            buildConfigField("Boolean", "DEVELOPER_ACCESS", "false")

            /**
             * Wallet Secret
             * This is a global secret for all Omoir Walletâ„¢ users
             *
             * This is an added failsafe in the event an attacker gains access to the user's wallet file.
             * Even if they somehow manage to gain access to the user's pin. They will still be unable to un-encrypt the file
             * because they would also need to know the wallet secret as well.
             */
            buildConfigField("String", "WALLET_SECRET", "\"${properties['WALLET_SECRET']}\"")
        }

        prod {
            versionNameSuffix = "-prod"
            resValue "string", "app_name", "Omoir Wallet"
            signingConfig signingConfigs.production
            buildConfigField("String", "BLOCKCHAIR_SERVER_URL", "\"https://api.blockchair.com/bitcoin/\"")
            buildConfigField("String", "BLOCKCHAIR_TESTNET_SERVER_URL", "\"https://api.blockchair.com/bitcoin/testnet/\"")
            buildConfigField("String", "BLOCKCHAIN_INFO_SERVER_URL", "\"https://api.blockchain.info/\"")
            buildConfigField("String", "COIN_GECKO_SERVER_URL", "\"https://api.coingecko.com/api/v3/\"")
            buildConfigField("String", "CHANGE_NOW_SERVER_URL", "\"https://api.changenow.io/v2/\"")
            buildConfigField("String", "BLOCKSTREAM_INFO_SERVER_URL", "\"https://blockstream.info/api/\"")
            buildConfigField("String", "BLOCKSTREAM_INFO_TEST_NET_SERVER_URL", "\"https://blockstream.info/testnet/api/\"")
            buildConfigField("String", "BLOCKCHAIR_CLIENT_SECRET", "\null")
            buildConfigField("String", "CHANGE_NOW_CLIENT_SECRET", "\"${properties['CHANGE_NOW_CLIENT_SECRET']}\"")
            buildConfigField("String", "REVENUE_CAT_SECRET", "\"${properties['REVENUE_CAT_SECRET']}\"")
            buildConfigField("String", "WALLET_SECRET", "\"${properties['WALLET_SECRET']}\"")
            buildConfigField("String", "COINGECKO_CLIENT_SECRET", "null")
            buildConfigField("Boolean", "PREMIUM_OVERRIDE", "false")
            buildConfigField("Boolean", "LOGGING_ENABLED", "false")
            buildConfigField("Boolean", "DEVELOPER_ACCESS", "false")
        }
    }
    compileOptions {
        incremental = false
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        viewBinding true
    }
}

dependencies {

    implementation 'androidx.core:core-ktx:1.9.0'
    implementation 'androidx.appcompat:appcompat:1.5.1'
    implementation 'com.google.android.material:material:1.7.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    implementation "androidx.navigation:navigation-fragment-ktx:$nav_version"
    implementation "androidx.navigation:navigation-ui-ktx:$nav_version"
    implementation 'androidx.security:security-crypto-ktx:1.1.0-alpha03'
    implementation 'androidx.preference:preference:1.1.1'
    testImplementation 'junit:junit:4.13.2'
    implementation 'androidx.biometric:biometric:1.0.1'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'

    implementation("org.jetbrains.kotlinx:kotlinx-coroutines-android:1.6.4")
    // Koin main features for Android
    implementation "io.insert-koin:koin-android:$koin_version"// Koin Core features
    implementation "io.insert-koin:koin-core:$koin_version"
// No more koin-android-viewmodel, koin-android-scope, koin-android-fragment

    implementation "androidx.swiperefreshlayout:swiperefreshlayout:$swipe_refresh_version"

    implementation "androidx.paging:paging-runtime-ktx:$paging_version"
    implementation "androidx.paging:paging-runtime:$paging_version"
    implementation "com.google.android.gms:play-services-vision:$google_vision_version"
    implementation "com.tbuonomo:dotsindicator:$pager_view_dots_version"
    implementation platform("com.google.firebase:firebase-bom:$firebase_bom_version")
    implementation "com.google.firebase:firebase-crashlytics-ktx:$firebase_version"
    implementation "com.squareup.retrofit2:converter-gson:2.9.0"

    implementation "com.airbnb.android:lottie:3.4.0"

    implementation 'com.journeyapps:zxing-android-embedded:4.3.0'
    coreLibraryDesugaring 'com.android.tools:desugar_jdk_libs:1.1.5'

    implementation 'androidx.core:core-performance:1.0.0-alpha02'
    implementation 'com.google.firebase:firebase-perf-ktx'

    implementation 'com.robinhood.spark:spark:1.2.0'

    implementation 'com.github.mifmif:generex:1.0.2'

    implementation 'com.diogobernardino:williamchart:3.11.0'

    implementation 'com.revenuecat.purchases:purchases:5.4.0'

// Tooltips
    implementation 'com.diogobernardino.williamchart:tooltip-slider:3.11.0'
    implementation 'com.diogobernardino.williamchart:tooltip-points:3.11.0'

    implementation 'nl.dionsegijn:konfetti-xml:2.0.2'

    implementation 'io.coil-kt:coil:1.2.0'
    implementation 'io.coil-kt:coil-svg:1.2.0'

    implementation project(":bitcoinkit")
    implementation project(":hd-wallet-kit")
    implementation project(":common")

    implementation 'io.reactivex.rxjava2:rxjava:2.2.19'
    implementation 'io.reactivex.rxjava2:rxandroid:2.1.1'
// Java Compatibility
    implementation "io.insert-koin:koin-android-compat:$koin_version"
// Jetpack WorkManager
    implementation "io.insert-koin:koin-androidx-workmanager:$koin_version"
// Navigation Graph
    implementation "io.insert-koin:koin-androidx-navigation:$koin_version"
}